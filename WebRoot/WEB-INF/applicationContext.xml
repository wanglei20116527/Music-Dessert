<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/MusicDessert"/>
		<property name="username" value="MusicDessert"/>
		<property name="password" value="MusicDessert"/>
	</bean>
	
	
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name = "dataSource">
			<ref bean = "dataSource"/>
		</property>
		
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
			</props>
		</property>
		
		<property name="mappingResources">
			<list>
				<value>com/MusicDessert/ORM/MdUser.hbm.xml</value>
				<value>com/MusicDessert/ORM/MdRecommandedmusic.hbm.xml</value>
				<value>com/MusicDessert/ORM/MdMusic.hbm.xml</value>
				<value>com/MusicDessert/ORM/MdCategory.hbm.xml</value>
			</list>
		</property>
		
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
		  <tx:attributes>
		    <tx:method name="add*" propagation="REQUIRED"/>
		    <tx:method name="delete*" propagation="REQUIRED"/>
		    <tx:method name="update*" propagation="REQUIRED"/>
		    <tx:method name="login*" propagation="REQUIRED"/>
		    <tx:method name="*" propagation="REQUIRED"/>
		  </tx:attributes>
	</tx:advice>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
		    <tx:method name="delete*" propagation="REQUIRED"/>
		    <tx:method name="update*" propagation="REQUIRED"/>
		    <tx:method name="login*" propagation="REQUIRED"/>
		    <tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>  
	</tx:advice>
	<!-- 事物切入 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="cut"
			expression="execution(* com.MusicDessert.Service.implement.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
	</aop:config>
	
   
    <bean id="testAction" class="Test.TestAction" scope="prototype"></bean>
    
    <bean id="user" class="com.MusicDessert.Service.implement.User" scope="prototype"></bean>
    
    <bean id="userDAO" class="com.MusicDessert.DAO.implement.UserDAO">
    	<property name="sessionFactory">
    		<ref bean="sessionFactory"/>
    	</property>
    </bean>
    
    <bean id="register" class="com.MusicDessert.Service.implement.Register" scope="prototype"> 
    	<property name="userDAO">
    		<ref bean="userDAO"/>
    	</property>
    </bean> 
    
    <bean id = "registerAction" class="com.MusicDessert.Action.RegisterAction" scope = "prototype">
    	<property name="register">
    		<ref bean="register" />
    	</property>
    </bean>
    
    
    <bean id="login" class="com.MusicDessert.Service.implement.Login" scope="prototype"> 
    	<property name="userDAO">
    		<ref bean="userDAO"/>
    	</property>
    </bean>
    
    <bean id = "loginAction" class="com.MusicDessert.Action.LoginAction" scope = "prototype">
    	<property name="login">
    		<ref bean="login" />
    	</property>
    </bean>
    
   <bean id = "logoutAction" class="com.MusicDessert.Action.LogoutAction" scope = "prototype"></bean>     
   
   
   <bean id="recommandedmusicDAO" class="com.MusicDessert.DAO.implement.MdRecommandedmusicDAO">
    	<property name="sessionFactory">
    		<ref bean="sessionFactory"/>
    	</property>
   </bean>
   
   <bean id="recommandedMusic" class="com.MusicDessert.Service.implement.Recommandedmusic" scope="prototype"> 
    	<property name="recommandedmusicDAO">
    		<ref bean="recommandedmusicDAO"/>
    	</property>
   </bean>
   
   <bean id="userMusicDAO" class="com.MusicDessert.DAO.implement.UserMusicDAO">
    	<property name="sessionFactory">
    		<ref bean="sessionFactory"/>
    	</property>
   </bean>
   
   <bean id="userMusic" class="com.MusicDessert.Service.implement.UserMusic" scope="prototype"> 
    	<property name="userMusicDAO">
    		<ref bean="userMusicDAO"/>
    	</property>
   </bean>
   
   <bean id = "uploadMusicAction" class="com.MusicDessert.Action.UploadMusicAction" scope = "prototype">
   		<property name="userMusic">
    		<ref bean="userMusic" />
    	</property>
   </bean>
   
   <bean id = "musicAction" class="com.MusicDessert.Action.MusicAction" scope = "prototype">
    	<property name="userMusic">
    		<ref bean="userMusic"/>
    	</property>
    	<property name="recommandedMusic">
    		<ref bean="recommandedMusic" />
    	</property>
    	<property name="user">
    		<ref bean="user" />
    	</property>
    	
    	
   </bean>
    
</beans> 